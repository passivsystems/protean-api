(ns protean.test.simplesim
  (:require [clojure.string :as s]
            [protean.api.transformation.sim :refer :all]))

{
  :sim-cfg {:validate? false}
  "sample" {
    "simple" {
      :get #(if-let [errs (validate %)] (response % 400 errs) (response % 200))
    }
    "bespoke" {
      :get #(if (:query-errors (validate %)) (response % 403) (response % 200))
    }
    "override" {
      :sim-cfg {
        :validate? true
        :validate-rule (fn [request rule]
                         (let [errs (validate request)]
                           (cond
                             (:query-errors errs) (response request 403)
                             rule                 (apply rule [request])
                             :else                (response request 200))))
      }
      :get #(response % 200)
    }
    "auth" {
      :get #(let [errs (validate %)]
              (cond
                (s/includes? (str (:header-errors errs)) "expected headers: authorization") (response % 401)
                (:header-errors errs)                                                       (response % 403)
                :else                                                                       (response % 200)))
    }
  }
}
